openapi: 3.0.2
info:
  title: 'soj'
  version: ''
paths:
  /api/problem/{id}/:
    get:
      summary: get problem detail by id
      operationId: RetrieveProblem
      parameters:
      - name: id
        in: path
        required: true
        description: Id of the problem.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                    maxLength: 50
                  time_limit:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: In ms
                  memory_limit:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: In KB
                  description:
                    type: string
                  sample_inputs:
                    type: array
                    items:
                      type: string
                    description: one item one test case
                  sample_outputs:
                    type: array
                    items:
                      type: string
                    description: one item one test case
                  note:
                    type: string
          description: ''
  /api/problem/admin/{id}/:
    get:
      summary: get problem *full* detail by id
      operationId: RetrieveProblem
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this problem.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  checker_type:
                    type: string
                  solutions:
                    type: array
                    items:
                      properties:
                        code:
                          type: string
                        lang:
                          type: string
                        is_model_solution:
                          type: boolean
                      required:
                      - code
                      - lang
                    readOnly: true
                  title:
                    type: string
                    maxLength: 50
                  description:
                    type: string
                  time_limit:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: In ms
                  memory_limit:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: In KB
                  note:
                    type: string
                  sample_inputs:
                    type: array
                    items:
                      type: string
                    description: one item one test case
                  sample_outputs:
                    type: array
                    items:
                      type: string
                    description: one item one test case
                  checker_code:
                    type: string
                  visible:
                    type: boolean
                required:
                - checker_type
                - inputs
                - title
                - description
          description: ''
  /api/problems/:
    get:
      summary: get problem list, the page size is currently 20
      operationId: listProblems
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        title:
                          type: string
                          maxLength: 50
                        is_solved:
                          type: boolean
                          description: If current user has already solved this problem.
                      required:
                        - title
          description: ''
  /api/problem/save/:
    post:
      summary: create a new problem
      operationId: CreateProblemPost
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  maxLength: 50
                description:
                  type: string
                time_limit:
                  type: integer
                  maximum: 2147483647
                  minimum: -2147483648
                  description: In ms
                memory_limit:
                  type: integer
                  maximum: 2147483647
                  minimum: -2147483648
                  description: In KB
                note:
                  type: string
                sample_inputs:
                  type: array
                  description: one item one test case
                  items:
                    type: string
                checker_type:
                  type: string
                checker_code:
                  type: string
                inputs:
                  type: array
                  description: one item one test case
                  items:
                    type: string
                solution_code:
                  type: string
                solution_lang:
                  type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  problem_id:
                    type: integer
                    description: the id of new problem
          description: ''
  /api/problem/publish/{id}/:
    post:
      summary: make a problem visible
      operationId: MakeProblemVisible
      parameters:
        - name: id
          in: path
          required: true
          description: A id of this problem.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/submission/{id}/:
    get:
      summary: get submission detail by id
      operationId: RetrieveSubmission
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this submission.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  verdict:
                    type: string
                    readOnly: true
                  memory:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: In KB
                  time:
                    type: integer
                    maximum: 2147483647
                    minimum: -2147483648
                    description: In ms
                  submit_time:
                    type: string
                    format: date-time
                    readOnly: true
                  code:
                    type: string
                  lang:
                    type: string
                  desc:
                    type: string
                    description: description of this submission, may be empty
          description: ''
  /api/submissions/:
    get:
      summary: get submission list, the page size is currently 20
      operationId: listSubmissions
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: username
          required: false
          in: query
          description: username used to filter the result.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        problem_id:
                          type: integer
                          readOnly: true
                        user_id:
                          type: integer
                          readOnly: true
                        user:
                          type: string
                          readOnly: true
                        verdict:
                          type: string
                          readOnly: true
                        submit_time:
                          type: string
                          format: date-time
                          readOnly: true
                        time:
                          type: integer
                          maximum: 2147483647
                          minimum: -2147483648
                          description: In ms
                        memory:
                          type: integer
                          maximum: 2147483647
                          minimum: -2147483648
                          description: In KB
                        lang:
                          type: string
          description: ''
  /api/submission/:
    post:
      summary: submit code for a problem
      operationId: CreateSubmissionPost
      parameters: []
      requestBody:
        description: parameters needed
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                pid:
                  type: integer
                  description: id of the problem
                code:
                  type: string
                  description: code
                lang:
                  type: string
                  description: language, one of attribute names of LanguageEnum
                contest_id:
                  type: integer
                  description: id of the contest that is related to this submission, optional
              required:
                - pid
                - code
                - lang
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  submission_id:
                    type: integer
                    description: the id of this submission
          description: ''
  /api/contests/:
    get:
      summary: get contest list, the page size is currently 20
      operationId: listContests
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        name:
                          type: string
                          maxLength: 255
                        start_time:
                          type: string
                          format: date-time
                        end_time:
                          type: string
                          format: date-time
                        is_running:
                          type: boolean
                          readOnly: true
                          description: whether the contest is running
                        category:
                          type: string
                          description: one of ["OPEN", "PRIVATE", "REGISTER", "SOLO"]
                        registered:
                          type: boolean
                          readOnly: true
                          description: whether the user is registered to this contest. If the contest category is "PRIVATE", then this field can be used to check whether the user has ever entered the password of this contest.
          description: ''
  /api/contest/{id}/:
    get:
      summary: get contest detail by contest id
      operationId: RetrieveContest
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this contest.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 255
                  description:
                    type: string
                  problems:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        title:
                          type: string
                          maxLength: 50
                        is_solved:
                          type: boolean
                          description: If current user has already solved this problem.
                      required:
                      - title
                    readOnly: true
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  is_running:
                    type: boolean
                    readOnly: true
                    description: whether the contest is running
                  registered:
                    type: boolean
                    readOnly: true
                    description: whether the user is registered to this contest. If the contest category is "PRIVATE", then this field can be used to check whether the user has ever entered the password of this contest.
                  category:
                    type: string
                    description: one of ['OPEN', 'PRIVATE', 'REGISTER']
          description: ''
  /api/contest/problem/{contest_id}/{problem_no}/:
    get:
      summary: get a contest problem detail, e.g. /api/contest/problem/1/A/
      operationId: RetrieveContestProblem
      parameters:
      - name: contest_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: problem_no
        in: path
        required: true
        description: 'should be an uppercase letter'
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  title:
                    type: string
                    maxLength: 50
                  time_limit:
                    type: integer
                    description: In ms
                  memory_limit:
                    type: integer
                    description: In KB
                  description:
                    type: string
                  sample_inputs:
                    type: string
                  sample_outputs:
                    type: string
                  note:
                    type: string
                required:
                - title
                - description
          description: ''
  /api/contest/register/{contest_id}/:
    post:
      summary: register a contest, return 200 only if the contest not started
      operationId: RegisterContest
      parameters:
      - name: contest_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/contest/unregister/{contest_id}/:
    post:
      summary: unregister a contest, return 200 only if the contest not started
      operationId: UnregisterContest
      parameters:
      - name: contest_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/contest/let-me-in/{contest_id}/:
    post:
      summary: verify password of a contest
      operationId: VerifyContestPassword
      parameters:
      - name: contest_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        description: password needed
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                password:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
          description: ''
  /api/contest/submissions/{contest_id}/:
    get:
      summary: get all submissions of a contest
      operationId: RetrieveContestSubmissionList
      parameters:
      - name: contest_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                  previous:
                    type: string
                    nullable: true
                  results:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          readOnly: true
                        problem_no:
                          type: string
                          readOnly: true
                          description: an uppercase letter
                        user_id:
                          type: integer
                          readOnly: true
                        user:
                          type: string
                          readOnly: true
                        verdict:
                          type: string
                        submit_time:
                          type: string
                          format: date-time
                          readOnly: true
                        time:
                          type: integer
                          maximum: 2147483647
                          minimum: -2147483648
                          description: In ms
                        memory:
                          type: integer
                          maximum: 2147483647
                          minimum: -2147483648
                          description: In KB
                        lang:
                          type: string
                      required:
                      - verdict
                      - lang
          description: ''
  /api/user/login/:
    post:
      operationId: user_login
      parameters: []
      requestBody:
        description: parameters needed
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                username:
                  type: string
                password:
                  type: string
                keep:
                  type: boolean
                  description: true if keep the login status
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                properties:
                  detail:
                    type: string
          description: 'wrong username or password'
  /api/user/logout/:
    post:
      operationId: user_logout
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/user/register/:
    post:
      summary: user register
      operationId: Createuser_register
      parameters:
          - name: username
            required: true
            in: query
            description: ''
            schema:
              type: string
          - name: password
            required: true
            in: query
            description: ''
            schema:
              type: string
          - name: email
            required: true
            in: query
            description: ''
            schema:
              type: email
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: 'success'
        '403':
          content:
            application/json:
              schema: {}
          description: 'duplicated username'
  /api/user/check-username/:
    get:
      summary: check if the given username has existed
      operationId: listcheck_usernames
      parameters:
        - name: username
          required: true
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  ok:
                    type: boolean
                    description: true if the username doesn't exist
          description: ''
  /api/global-info/:
    get:
      summary: global info that may used in every page
      operationId: listglobal_infos
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  is_signed_in:
                    type: boolean
                    description: true if current used is signed in
                  username:
                    type: string
                    description: username of current user, null if not signed in.
          description: ''